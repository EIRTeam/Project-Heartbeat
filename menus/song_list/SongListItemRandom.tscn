[gd_scene load_steps=15 format=2]

[ext_resource path="res://fonts/SongLabel.tres" type="DynamicFont" id=1]
[ext_resource path="res://graphics/icons/menu_heart.png" type="Texture" id=2]
[ext_resource path="res://menus/song_list/SongListItemRandom.gd" type="Script" id=3]
[ext_resource path="res://graphics/icons/menu_heart_white.png" type="Texture" id=4]
[ext_resource path="res://fonts/orbitron-black.otf" type="DynamicFontData" id=5]
[ext_resource path="res://styles/SongListItemHover.tres" type="StyleBox" id=6]
[ext_resource path="res://Theme_Game_Min.tres" type="Theme" id=7]

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 0.3, 0.3, 0.3, 0.5 )
border_width_left = 6
border_width_top = 6
border_width_right = 8
border_width_bottom = 6
border_color = Color( 0.6, 0.6, 0.6, 0.74902 )
corner_radius_top_left = 5
corner_radius_top_right = 1024
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5
corner_detail = 1
shadow_color = Color( 0, 0, 0, 0.25 )
shadow_size = 10

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

vec3 hsv2rgb(vec3 c)
{
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void fragment() {
	COLOR.rgb = hsv2rgb(vec3(UV.x + mod(TIME * 0.25, 1.0), 1.0, 1.0));
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )

[sub_resource type="StyleBoxFlat" id=7]
bg_color = Color( 0.3, 0.3, 0.3, 0.5 )
border_width_left = 6
border_width_top = 6
border_width_right = 8
border_width_bottom = 6
border_color = Color( 0.6, 0.6, 0.6, 0.74902 )
corner_radius_top_left = 5
corner_radius_top_right = 1024
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5
corner_detail = 1
shadow_color = Color( 0, 0, 0, 0.25 )
shadow_size = 10

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

vec3 hsv2rgb(vec3 c)
{
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void fragment() {
	COLOR = texture(TEXTURE, UV);
	COLOR.rgb *= hsv2rgb(vec3((UV.x * 0.25) + mod(TIME * 0.25, 0.0), 1.0, 1.0));
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )

[sub_resource type="DynamicFont" id=1]
size = 40
outline_size = 4
outline_color = Color( 0, 0, 0, 0.486275 )
use_mipmaps = true
use_filter = true
extra_spacing_top = 15
font_data = ExtResource( 5 )

[node name="Control" type="Control"]
use_parent_material = true
anchor_right = 1.0
margin_bottom = 100.0
rect_min_size = Vector2( 0, 100 )
focus_mode = 2
mouse_filter = 2
size_flags_horizontal = 3
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}
node_to_scale_path = NodePath("Control")

[node name="Control" type="Button" parent="."]
use_parent_material = true
margin_left = 60.0
margin_top = 25.0
margin_right = 1720.0
margin_bottom = 75.0
focus_mode = 0
size_flags_horizontal = 3
theme = ExtResource( 7 )
custom_constants/hseparation = 0
custom_styles/hover = ExtResource( 6 )
custom_styles/pressed = ExtResource( 6 )
custom_styles/normal = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RainbowOverlay" type="Panel" parent="Control"]
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
custom_styles/panel = SubResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MarginContainer" type="MarginContainer" parent="Control"]
use_parent_material = true
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
custom_constants/margin_top = 0
custom_constants/margin_left = 62
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="Control/MarginContainer"]
use_parent_material = true
margin_left = 62.0
margin_right = 1660.0
margin_bottom = 50.0
mouse_filter = 2
custom_constants/separation = 7
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MarginContainer" type="MarginContainer" parent="Control/MarginContainer/HBoxContainer"]
use_parent_material = true
margin_right = 128.0
margin_bottom = 50.0
mouse_filter = 2
custom_constants/margin_top = 6
custom_constants/margin_left = 0
custom_constants/margin_bottom = 6

[node name="VBoxContainer" type="VBoxContainer" parent="Control/MarginContainer/HBoxContainer/MarginContainer"]
use_parent_material = true
margin_top = 6.0
margin_right = 128.0
margin_bottom = 44.0
mouse_filter = 2
size_flags_horizontal = 3
alignment = 1

[node name="HBoxContainer" type="HBoxContainer" parent="Control/MarginContainer/HBoxContainer/MarginContainer/VBoxContainer"]
use_parent_material = true
margin_right = 128.0
margin_bottom = 38.0
size_flags_vertical = 3
custom_constants/separation = 10

[node name="TitleLabel" type="Label" parent="Control/MarginContainer/HBoxContainer/MarginContainer/VBoxContainer/HBoxContainer"]
use_parent_material = true
margin_right = 128.0
margin_bottom = 38.0
size_flags_vertical = 7
custom_fonts/font = ExtResource( 1 )
text = "??????"
valign = 1

[node name="TextureRect" type="TextureRect" parent="Control"]
use_parent_material = true
margin_left = -87.747
margin_top = -35.0
margin_right = 87.253
margin_bottom = 90.0
rect_min_size = Vector2( 175, 125 )
mouse_filter = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 0.2
texture = ExtResource( 2 )
expand = true
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StarRainbow" type="TextureRect" parent="Control/TextureRect"]
material = SubResource( 9 )
anchor_right = 1.0
anchor_bottom = 1.0
rect_min_size = Vector2( 175, 125 )
mouse_filter = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 0.2
texture = ExtResource( 4 )
expand = true
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StarsLabel" type="Label" parent="Control/TextureRect"]
use_parent_material = true
anchor_right = 1.0
anchor_bottom = 0.918
margin_left = 0.397217
margin_right = 0.397217
custom_fonts/font = SubResource( 1 )
text = "?"
align = 1
valign = 1
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[connection signal="pressed" from="Control" to="." method="emit_signal" binds= [ "pressed" ]]
